# Redirect all HTTP to HTTPS
server {
    listen 80;
    server_name ${SERVER_NAME} localhost;
    return 301 https://$host$request_uri;
}

# HTTPS traffic handler
server {
    listen 443 ssl;
    server_name ${SERVER_NAME} localhost;

    gzip on;
    gzip_types text/html application/javascript application/json text/css;

    # SSL / TLS certificates
    ssl_certificate /etc/nginx/tls.combined-chain;
    ssl_certificate_key /etc/nginx/tls.key;

    # Directory where your JSON files are stored
    root /app;
    index index.html index.htm;

    location = /config.json {
        add_header Content-Type application/json;
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        alias /app/config.json;
    }

    location / {
        try_files $uri $uri/ $uri.html /index.html;

        # Disable caching for HTML file
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    location ~* \.(?:css|js|jpg|jpeg|png|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public";

        # Enable caching for static assets
        add_header Cache-Control "public, max-age=31536000"; # 1 year

        # Optional: configure versioned filenames to bypass cache
        try_files $uri =404;
    }

    location ~* \.(?:json)$ {
        expires 1d;
        # Enable caching for static assets
        add_header Cache-Control "public, max-age=31536000"; # 1 year

        # Optional: configure versioned filenames to bypass cache
        try_files $uri =404;
    }
}
